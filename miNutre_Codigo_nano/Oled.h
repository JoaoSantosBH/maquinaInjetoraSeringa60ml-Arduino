
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

#define OLED_RESET     4 // Reset pin # (or -1 if sharing Arduino reset pin)
#define SCREEN_ADDRESS 0x3C ///< See datasheet for Address; 0x3D for 128x64, 0x3C for 128x32
#define LOGO_HEIGHT   64
#define LOGO_WIDTH    128

const int x0 = 5;
const int y0 = 20;
const int width = 116;
const int height = 40;
const int radius = 8;
const int tint = 1;
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);


// 'miNutre', 128x64px
const unsigned char logo_mi_nutre [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xfc, 0x00, 0x00, 0x7f, 0x80, 0x00, 0x00, 0x00, 0x07,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc0, 0x07, 0xff, 0x80, 0x00, 0x00, 0x00, 0x07,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xe0, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xe3, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x60, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x60, 0x00, 0x07, 0x80, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x60, 0x00, 0x0f, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x07,
  0x60, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x0c, 0x18, 0x00, 0x07,
  0x60, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x18, 0x04, 0x00, 0x07,
  0x60, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x33, 0xe6, 0x00, 0x07,
  0x60, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x22, 0x32, 0x00, 0x07,
  0x60, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x62, 0x33, 0x00, 0x07,
  0x60, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x63, 0xe3, 0x00, 0x07,
  0x61, 0xe0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x63, 0xc3, 0x00, 0x07,
  0x63, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x22, 0x63, 0x00, 0x07,
  0x63, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x22, 0x62, 0x00, 0x07,
  0x63, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x32, 0x36, 0x00, 0x07,
  0x63, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x18, 0x0c, 0x00, 0x07,
  0x61, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x78, 0x00, 0x07,
  0x61, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x07,
  0x61, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x61, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x60, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x60, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x1f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x60, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x7f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x60, 0x7f, 0xf8, 0x7f, 0xf0, 0x00, 0x00, 0x00, 0x7f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x60, 0x7f, 0xc0, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x60, 0x7f, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x60, 0x7f, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x60, 0x3f, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x60, 0x3e, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x60, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x01, 0x30, 0xc0, 0x0f, 0xde, 0x1f, 0x07,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xe0, 0x00, 0x03, 0xb8, 0xdc, 0xff, 0xdf, 0x9f, 0x87,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xe0, 0x00, 0x03, 0xb8, 0xdc, 0xff, 0xdf, 0x9f, 0x87,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xe0, 0x00, 0x00, 0x3c, 0xdc, 0xe7, 0x19, 0x98, 0x07,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xf0, 0x1f, 0xfb, 0xbe, 0xdc, 0xe7, 0x1b, 0x9f, 0x07,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xf0, 0x1f, 0xfb, 0xb7, 0xdc, 0xe7, 0x1f, 0x9f, 0x87,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xe0, 0x19, 0x9b, 0xb7, 0xdc, 0xe7, 0x1f, 0x1f, 0x07,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xe0, 0x19, 0x9b, 0xb3, 0xdc, 0xe7, 0x1b, 0x98, 0x07,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xe0, 0x19, 0x9b, 0xb1, 0xdf, 0xe7, 0x1b, 0xdf, 0x87,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0x19, 0x9b, 0xb1, 0xcf, 0xc7, 0x19, 0xdf, 0x87,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

void drawLogo() {
  display.clearDisplay();
  display.drawBitmap(0, 0,  logo_mi_nutre, LOGO_WIDTH, LOGO_HEIGHT, 1);
  display.display();
  delay(3000);
}

void drawInit() {
  display.clearDisplay();
  display.setTextSize(2); // Draw 2X-scale text
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(40, 0);
  display.println(F("(31)"));
  display.setCursor(10, 25);
  display.println(F("988470290"));
  display.setTextSize(1); // Draw 2X-scale text
  display.setCursor(0, 40);
  display.println(F("joaomarcelo.ms@gmail.com"));
  display.display();
  delay(1000);
}

void drawInjet() {
  display.clearDisplay();
  display.drawRoundRect(x0, y0, width, height, radius, tint);
  display.setTextSize(2);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(20, 0);
  display.println(F("miNUTRE"));
  display.setTextSize(2);
  display.setCursor(10, 35);
  display.println(F("INJETANDO"));
  display.display();
  delay(1000);
}

void drawRecall() {
  display.clearDisplay();
  display.drawRoundRect(x0, y0, width, height, radius, tint);
  display.setTextSize(2);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(20, 0);
  display.println(F("miNUTRE"));
  display.setTextSize(2);
  display.setCursor(10, 35);
  display.println(F("RECOLHEND"));
  display.display();
  delay(1000);
}

void drawWait() {
  display.clearDisplay();
  display.drawRoundRect(x0, y0, width, height, radius, tint);
  display.setTextSize(2);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(20, 0);
  display.println(F("miNUTRE"));
  display.setTextSize(2);
  display.setCursor(10, 35);
  display.println(F("ESPERANDO"));
  display.display();
  delay(1000);
}

void drawBtn(int btn){
  display.clearDisplay();
  display.drawRoundRect(x0, y0, width, height, radius, tint);
  display.setTextSize(2);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(20, 0);
  display.println(btn);
  display.setTextSize(2);
  display.setCursor(10, 35);
  display.println(F("BTN"));
  display.display();
  delay(1000);
}
void setupOled() {
  if (!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {
    Serial.println(F("SSD1306 allocation failed"));
    for (;;); 
  }
  display.display();
  delay(2000); // Pause for 2 seconds
  // Clear the buffer
  display.clearDisplay();
  display.display();
  delay(2000);

}
